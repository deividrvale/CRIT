THEORY ints
LOGIC  QF_LIA
SOLVER internal
SIGNATURE

  fib ;
  w   ;
  return : Int => result;
  error  : result;


  fastfib: Int => result;
  u_1: Int * Int => result;
  u_2: Int * Int * Int => result;
  u_3: Int * Int * Int * Int => result;
  u_4: Int * Int * Int * Int * Int => result;
  u_5: Int * Int * Int * Int * Int => result;
  u_6: Int * Int * Int * Int * Int => result;
  error: result;
  return: Int => result;
  u_7: Int * Int * Int * Int * Int => result;
  u_8: Int * Int * Int * Int * Int => result;
  u_9: Int * Int * Int * Int * Int => result;
  u_10: Int * Int * Int * Int * Int => result;
  u_11: Int * Int * Int * Int * Int => result;
  u_12: Int * Int * Int * Int * Int => result;
  u_13: Int * Int * Int * Int * Int => result;

RULES

  fib(x)        -> return(0)               [x <= 0]       ;
  fib(1)        -> return(1)                              ;
  fib(x)        -> w(fib(x - 1), fib(x - 2)) [x - 2 >= 0]   ;
  w(return(x), return(y)) -> return(x + y) ;
  w(return(x), error) -> error ;
  w(error, return(y)) -> error ;
  w(error, error) -> error ;



  fastfib(n_1) -> u_1(n_1, rnd_1);
  u_1(n_1, a_2) -> u_2(n_1, a_2, rnd_2);
  u_2(n_1, a_2, b_2) -> u_3(n_1, a_2, b_2, rnd_3);
  u_3(n_1, a_2, b_2, c_2) -> u_4(n_1, a_2, b_2, c_2, rnd_4);
  u_4(n_1, a_2, b_2, c_2, d_2) -> u_5(n_1, 0, b_2, c_2, d_2);
  u_5(n_1, a_2, b_2, c_2, d_2) -> u_6(n_1, a_2, 1, c_2, d_2);
  u_6(n_1, a_2, b_2, c_2, d_2) -> return(0)  [(n_1 < 0)];
  u_6(n_1, a_2, b_2, c_2, d_2) -> return(1)  [((n_1 >= 0) /\ (n_1 = 1))];
  u_6(n_1, a_2, b_2, c_2, d_2) -> u_7(n_1, a_2, b_2, 2, d_2)  [((n_1 >= 0) /\ (n_1 # 1))];
  u_7(n_1, a_2, b_2, c_2, d_2) -> u_8(n_1, a_2, b_2, c_2, (a_2 + b_2))  [(c_2 <= n_1)];
  u_8(n_1, a_2, b_2, c_2, d_2) -> u_9(n_1, b_2, b_2, c_2, d_2);
  u_9(n_1, a_2, b_2, c_2, d_2) -> u_10(n_1, a_2, d_2, c_2, d_2);
  u_10(n_1, a_2, b_2, c_2, d_2) -> u_11(n_1, a_2, b_2, c_2, d_2);
  u_11(n_1, a_2, b_2, c_2, d_2) -> u_12(n_1, a_2, b_2, c_2, d_2);
  u_12(n_1, a_2, b_2, c_2, d_2) -> u_13(n_1, a_2, b_2, (c_2 + 1), d_2);
  u_13(n_1, a_2, b_2, c_2, d_2) -> u_7(n_1, a_2, b_2, c_2, d_2);
  u_7(n_1, a_2, b_2, c_2, d_2) -> return(d_2)  [(c_2 > n_1)];

QUERY  do-simplify [fib fastfib] and equivalence fastfib(n) -><- fib(n) [true]

